<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tobeyond.blog.dao.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.tobeyond.blog.model.po.ArticlePo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="category_id" jdbcType="INTEGER" property="category_id" />
        <result column="user_id" jdbcType="INTEGER" property="user_id" />
        <result column="is_show" jdbcType="INTEGER" property="is_show" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="subtitle" jdbcType="VARCHAR" property="subtitle" />
        <result column="page_image" jdbcType="VARCHAR" property="page_image" />
        <result column="view_count" jdbcType="INTEGER" property="view_count" />
        <result column="created_at" jdbcType="VARCHAR" property="created_at" />
        <result column="updated_at" jdbcType="VARCHAR" property="updated_at" />
    </resultMap>

    <resultMap id="BaseInfoWithTagsMap" extends="BaseResultMap" type="com.tobeyond.blog.model.Bo.ArticleBo">
        <collection property="tagList" ofType="com.tobeyond.blog.model.Bo.ArticleTagBo" javaType="java.util.ArrayList" column="id" select="getArticleTags">
        </collection>
    </resultMap>

    <resultMap id="FullResultMap" extends="BaseResultMap" type="com.tobeyond.blog.model.Bo.ArticleBo">
        <result column="content" jdbcType="VARCHAR" property="content" />
        <collection property="tagList" ofType="com.tobeyond.blog.model.Bo.ArticleTagBo" javaType="java.util.ArrayList" column="id" select="getArticleTags">
        </collection>
    </resultMap>

    <resultMap id="ArticleTags" type="com.tobeyond.blog.model.Bo.ArticleTagBo">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="article_id" jdbcType="INTEGER" property="article_id" />
        <result column="tag_id" jdbcType="INTEGER" property="tag_id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <!--<association property="tag" column="tag_id" select="getTags">-->
        <!--</association>-->
    </resultMap>

    <!--<resultMap id="Tags" type="com.tobeyond.blog.model.po.Tag">-->
        <!--<id column="id" jdbcType="INTEGER" property="id" />-->
        <!--<result column="title" jdbcType="VARCHAR" property="title" />-->
        <!--<result column="tag" jdbcType="VARCHAR" property="tag" />-->
    <!--</resultMap>-->

    <sql id="Base_Column">
        articles.id, articles.category_id,articles.user_id, articles.title, articles.subtitle, articles.is_show,
        articles.page_image, articles.view_count, articles.created_at, articles.updated_at,articles.slug
    </sql>

    <sql id="with_content_Column">
        articles.id, articles.category_id,articles.user_id, articles.title, articles.subtitle, articles.content,articles.is_show,
        articles.page_image, articles.view_count, articles.created_at, articles.updated_at,articles.slug
    </sql>

    <!--if 判断map传来的参数，并且使用where in-->
    <select id="articleListBaseInfo" parameterType="Map" resultMap="BaseInfoWithTagsMap">
        select  <include refid="Base_Column" />  from articles where is_del = '0'
        <if test="inIds != null">
           AND id IN
            <foreach item="articleId" index="index" collection="inIds"
                     open="(" separator="," close=")"> #{articleId}</foreach>
        </if>
        order by id desc
    </select>

    <select id="articleFullInfo" resultMap="FullResultMap" parameterType="Map">
        SELECT   <include refid="with_content_Column" />
        FROM articles
        WHERE articles.id = #{id}
    </select>

    <select id="getArticleTags" parameterType="int" resultMap="ArticleTags">
        select
        article_tags.id,article_tags.tag_id,tags.title
        from article_tags
        LEFT JOIN tags on article_tags.tag_id = tags.id
        where article_tags.article_id = #{id} AND article_tags.is_del = '0'
    </select>

    <!--<select id="getTags" parameterType="int" resultMap="Tags">-->
        <!--SELECT tags.id,tags.title,tags.tag FROM tags where id = ${id}-->
    <!--</select>-->

    <!--<insert id="articleAdd" parameterType="com.tobeyond.blog.model.po.ArticlePo">-->
    <!--keyProperty="id"会使得insert后返回id，id赋值在传入的对象里-->
    <insert id="articleAdd" useGeneratedKeys="true" keyProperty="id" parameterType="com.tobeyond.blog.model.po.ArticlePo">
        insert into articles(user_id,slug,title,subtitle,content,page_image,is_show,created_at)
        values(#{user_id,jdbcType=INTEGER},
        #{slug,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{subtitle,jdbcType=VARCHAR},
        #{content,jdbcType=VARCHAR},
        #{page_image,jdbcType=VARCHAR},
        #{is_show,jdbcType=INTEGER},
        #{created_at,jdbcType=VARCHAR})
    </insert>

    <update id="articleDel" parameterType="Integer">
        UPDATE articles SET is_del = '1' where id = #{value}
    </update>

    <update id="changeShow" parameterType="Map">
        UPDATE articles SET is_show = #{is_show} where id = #{id}
    </update>

    <update id="articleUpdate" parameterType="com.tobeyond.blog.model.po.ArticlePo">
        update articles
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="subtitle != null">
                subtitle = #{subtitle,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>
            <if test="updated_at != null">
                updated_at = #{updated_at,jdbcType=VARCHAR},
            </if>
            <if test="is_show != null">
                is_show = #{is_show,jdbcType=INTEGER},
            </if>
            <if test="page_image != null">
                page_image = #{page_image,jdbcType=VARCHAR},
            </if>
            <if test="category_id != null">
                category_id = #{category_id,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>