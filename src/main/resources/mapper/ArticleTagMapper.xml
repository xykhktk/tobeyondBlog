<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tobeyond.blog.dao.mapper.ArticleTagsMapper">
    <resultMap id="BaseResultMap" type="com.tobeyond.blog.model.po.ArticleTagsPo">
        <constructor>
            <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="tag_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="article_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="is_del" javaType="java.lang.Byte" jdbcType="TINYINT" />
            <arg column="created_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="updated_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
            <arg column="deleted_at" javaType="java.util.Date" jdbcType="TIMESTAMP" />
        </constructor>
    </resultMap>

    <sql id="Base_Column">
    </sql>

    <!--自己写的insertBatch-->
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO article_tags (tag_id,article_id,created_at)  values
        <foreach collection="list" item="articleTag" index="index" separator=",">
            (#{articleTag.tagId},#{articleTag.articleId},#{articleTag.createdAt})
        </foreach>
    </insert>

    <!--自己写的-->
    <update id="delArticleTags" parameterType="Map">
        UPDATE article_tags SET is_del = '1',deleted_at = #{deletedAt} WHERE article_id = #{articleId} AND
            article_tags.tag_id IN
            <foreach item="delTagId" index="index" collection="whereInTagIds"
                     open="(" separator="," close=")"> #{delTagId}</foreach>
    </update>

    <!--以下是代码生成器生成-->
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, tag_id, article_id, is_del, created_at, updated_at, deleted_at
    </sql>
    <select id="selectByExample" parameterType="com.tobeyond.blog.model.po.ArticleTagsExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List" />
        from article_tags
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <insert id="insert" parameterType="com.tobeyond.blog.model.po.ArticleTagsPo">
        insert into article_tags (id, tag_id, article_id,
        is_del, created_at, updated_at,
        deleted_at)
        values (#{id,jdbcType=INTEGER}, #{tagId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER},
        #{isDel,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},
        #{deletedAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.tobeyond.blog.model.po.ArticleTagsPo">
        insert into article_tags
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="deletedAt != null">
                deleted_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=INTEGER},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=TINYINT},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                #{deletedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.tobeyond.blog.model.po.ArticleTagsExample" resultType="java.lang.Long">
        select count(*) from article_tags
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update article_tags
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.tagId != null">
                tag_id = #{record.tagId,jdbcType=INTEGER},
            </if>
            <if test="record.articleId != null">
                article_id = #{record.articleId,jdbcType=INTEGER},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=TINYINT},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deletedAt != null">
                deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update article_tags
        set id = #{record.id,jdbcType=INTEGER},
        tag_id = #{record.tagId,jdbcType=INTEGER},
        article_id = #{record.articleId,jdbcType=INTEGER},
        is_del = #{record.isDel,jdbcType=TINYINT},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <select id="getTagsByArticleId" parameterType="int" resultType="com.tobeyond.blog.model.bo.ArticleTagBo">
        select
        article_tags.id,article_tags.tag_id,tags.title
        from article_tags
        LEFT JOIN tags on article_tags.tag_id = tags.id
        where article_tags.article_id = #{id} AND article_tags.is_del = '0'
    </select>

</mapper>